@tailwind base;
@tailwind components;
@tailwind utilities;

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

:root {
  --background: #111111;
  --foreground: #ededed;
  --primary: #8B0000;
  --secondary: #1a1a1a;
  --accent: #D4AF37;
  --muted: #444444;
  --light: #CCCCCC;
  
  /* Animation speeds */
  --speed-fast: 0.3s;
  --speed-medium: 0.6s;
  --speed-slow: 1s;
  
  /* Gradients */
  --gradient-gold: linear-gradient(45deg, #D4AF37 0%, #FCEABB 50%, #D4AF37 100%);
  --gradient-dark: linear-gradient(to bottom, #1a1a1a 0%, #000000 100%);
}

@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-15px); }
  100% { transform: translateY(0px); }
}

@keyframes pulse {
  0% { opacity: 0.8; }
  50% { opacity: 1; }
  100% { opacity: 0.8; }
}

@keyframes shimmer {
  0% { background-position: -100% 0; }
  100% { background-position: 100% 0; }
}

@keyframes fadeIn {
  0% { opacity: 0; transform: translateY(20px); }
  100% { opacity: 1; transform: translateY(0); }
}

@keyframes wave {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

@keyframes scrollText {
  0% { transform: translateX(0); }
  100% { transform: translateX(-100%); }
}

.animate-wave {
  animation: wave 0.5s ease-in-out;
}

.animate-scroll-text {
  animation: scrollText 20s linear infinite;
}

body {
  color: var(--foreground);
  background: var(--background);
  background-image: url('/images/bg-texture.png');
  background-blend-mode: overlay;
  font-family: Arial, Helvetica, sans-serif;
  overflow-x: hidden;
}

h1, h2, h3, h4, h5, h6 {
  @apply font-gothic text-primary;
}

a {
  @apply text-light hover:text-accent transition-colors duration-300;
}

.container {
  @apply px-4 mx-auto max-w-6xl;
}

/* Button styles */
.btn {
  @apply px-4 py-2 rounded-full transition-all duration-300;
  position: relative;
  overflow: hidden;
}

.btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255,255,255,0.1);
  transform: translateX(-100%);
  transition: transform 0.3s ease;
}

.btn:hover::before {
  transform: translateX(0);
}

.btn-primary {
  @apply bg-primary text-white hover:bg-opacity-80;
}

.btn-accent {
  @apply bg-accent text-secondary hover:bg-opacity-80;
}

.btn-outline {
  @apply border-2 border-accent text-[#fceabb] hover:text-accent hover:border-opacity-80;
  background-image: var(--gradient-dark);
}

/* Section styling for better contrast */
.section-dark {
  @apply bg-secondary bg-opacity-30 rounded-lg p-6;
  position: relative;
  backdrop-filter: blur(3px);
  box-shadow: 0 10px 30px rgba(0,0,0,0.4);
}

.section-dark::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, transparent 95%, var(--accent) 95%);
  z-index: -1;
  opacity: 0.4;
  border-radius: 0.5rem;
}

/* Animation helpers */
.animate-float {
  animation: float 6s ease-in-out infinite;
  opacity: 1;
}

.animate-pulse-subtle {
  animation: pulse 4s ease-in-out infinite;
}

.animate-shimmer {
  background: linear-gradient(90deg, rgba(212,175,55,0.7) 0%, rgba(252,234,187,0.9) 50%, rgba(212,175,55,0.7) 100%);
  background-size: 200% 100%;
  animation: shimmer 3s infinite;
  display: inline-block;
  color: transparent;
  -webkit-background-clip: text;
  background-clip: text;
}

.animate-fade-in {
  animation: fadeIn 0.8s ease-out forwards;
  opacity: 0;
  animation-fill-mode: forwards !important;
}

.stagger-item:nth-child(1) { animation-delay: 0.1s; }
.stagger-item:nth-child(2) { animation-delay: 0.3s; }
.stagger-item:nth-child(3) { animation-delay: 0.5s; }
.stagger-item:nth-child(4) { animation-delay: 0.7s; }

/* Glass effect */
.glass {
  background: rgba(26, 26, 26, 0.2);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(212, 175, 55, 0.1);
}

/* Debug - remove after fixing */
.debug-border {
  border: 2px solid red !important;
}

/* Fixes for Next.js Image in container */
.image-container {
  position: relative !important;
  min-height: 256px !important;
  min-width: 256px !important;
  display: block !important;
}

.image-container > div {
  position: unset !important;
}

/* Layering fixes */
main {
  position: relative;
  z-index: 0;
}

.tiltcard-container {
  position: relative;
  z-index: 5;
  display: block;
  height: 256px;
  width: 256px;
}
